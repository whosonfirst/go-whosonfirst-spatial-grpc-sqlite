// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spatial.proto

package spatial

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExistentialFlag int32

const (
	ExistentialFlag_FALSE   ExistentialFlag = 0
	ExistentialFlag_TRUE    ExistentialFlag = 1
	ExistentialFlag_UNKNOWN ExistentialFlag = -1
)

var ExistentialFlag_name = map[int32]string{
	0:  "FALSE",
	1:  "TRUE",
	-1: "UNKNOWN",
}

var ExistentialFlag_value = map[string]int32{
	"FALSE":   0,
	"TRUE":    1,
	"UNKNOWN": -1,
}

func (x ExistentialFlag) String() string {
	return proto.EnumName(ExistentialFlag_name, int32(x))
}

func (ExistentialFlag) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ab81574adde31065, []int{0}
}

type PointInPolygonRequest struct {
	Latitude             float32  `protobuf:"fixed32,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32  `protobuf:"fixed32,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PointInPolygonRequest) Reset()         { *m = PointInPolygonRequest{} }
func (m *PointInPolygonRequest) String() string { return proto.CompactTextString(m) }
func (*PointInPolygonRequest) ProtoMessage()    {}
func (*PointInPolygonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab81574adde31065, []int{0}
}

func (m *PointInPolygonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PointInPolygonRequest.Unmarshal(m, b)
}
func (m *PointInPolygonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PointInPolygonRequest.Marshal(b, m, deterministic)
}
func (m *PointInPolygonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PointInPolygonRequest.Merge(m, src)
}
func (m *PointInPolygonRequest) XXX_Size() int {
	return xxx_messageInfo_PointInPolygonRequest.Size(m)
}
func (m *PointInPolygonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PointInPolygonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PointInPolygonRequest proto.InternalMessageInfo

func (m *PointInPolygonRequest) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *PointInPolygonRequest) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

type StandardPlaceResponse struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ParentId             string          `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	Placetype            string          `protobuf:"bytes,3,opt,name=placetype,proto3" json:"placetype,omitempty"`
	Country              string          `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	Repo                 string          `protobuf:"bytes,5,opt,name=repo,proto3" json:"repo,omitempty"`
	Path                 string          `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`
	Uri                  string          `protobuf:"bytes,7,opt,name=uri,proto3" json:"uri,omitempty"`
	Latitude             float32         `protobuf:"fixed32,8,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float32         `protobuf:"fixed32,9,opt,name=longitude,proto3" json:"longitude,omitempty"`
	IsCurrent            ExistentialFlag `protobuf:"varint,10,opt,name=is_current,json=isCurrent,proto3,enum=ExistentialFlag" json:"is_current,omitempty"`
	IsCeased             ExistentialFlag `protobuf:"varint,11,opt,name=is_ceased,json=isCeased,proto3,enum=ExistentialFlag" json:"is_ceased,omitempty"`
	IsDeprecated         ExistentialFlag `protobuf:"varint,12,opt,name=is_deprecated,json=isDeprecated,proto3,enum=ExistentialFlag" json:"is_deprecated,omitempty"`
	IsSuperseded         ExistentialFlag `protobuf:"varint,13,opt,name=is_superseded,json=isSuperseded,proto3,enum=ExistentialFlag" json:"is_superseded,omitempty"`
	IsSuperseding        ExistentialFlag `protobuf:"varint,14,opt,name=is_superseding,json=isSuperseding,proto3,enum=ExistentialFlag" json:"is_superseding,omitempty"`
	InceptionDate        string          `protobuf:"bytes,15,opt,name=inception_date,json=inceptionDate,proto3" json:"inception_date,omitempty"`
	CessationDate        string          `protobuf:"bytes,16,opt,name=cessation_date,json=cessationDate,proto3" json:"cessation_date,omitempty"`
	MinLatitude          float32         `protobuf:"fixed32,17,opt,name=min_latitude,json=minLatitude,proto3" json:"min_latitude,omitempty"`
	MinLongitude         float32         `protobuf:"fixed32,18,opt,name=min_longitude,json=minLongitude,proto3" json:"min_longitude,omitempty"`
	MaxLatitude          float32         `protobuf:"fixed32,19,opt,name=max_latitude,json=maxLatitude,proto3" json:"max_latitude,omitempty"`
	MaxLongitude         float32         `protobuf:"fixed32,20,opt,name=max_longitude,json=maxLongitude,proto3" json:"max_longitude,omitempty"`
	SupersededBy         []int64         `protobuf:"varint,21,rep,packed,name=superseded_by,json=supersededBy,proto3" json:"superseded_by,omitempty"`
	Supersedes           []int64         `protobuf:"varint,22,rep,packed,name=supersedes,proto3" json:"supersedes,omitempty"`
	BelongsTo            []int64         `protobuf:"varint,23,rep,packed,name=belongs_to,json=belongsTo,proto3" json:"belongs_to,omitempty"`
	LastModified         int64           `protobuf:"varint,24,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StandardPlaceResponse) Reset()         { *m = StandardPlaceResponse{} }
func (m *StandardPlaceResponse) String() string { return proto.CompactTextString(m) }
func (*StandardPlaceResponse) ProtoMessage()    {}
func (*StandardPlaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab81574adde31065, []int{1}
}

func (m *StandardPlaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardPlaceResponse.Unmarshal(m, b)
}
func (m *StandardPlaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardPlaceResponse.Marshal(b, m, deterministic)
}
func (m *StandardPlaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardPlaceResponse.Merge(m, src)
}
func (m *StandardPlaceResponse) XXX_Size() int {
	return xxx_messageInfo_StandardPlaceResponse.Size(m)
}
func (m *StandardPlaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardPlaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StandardPlaceResponse proto.InternalMessageInfo

func (m *StandardPlaceResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StandardPlaceResponse) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *StandardPlaceResponse) GetPlacetype() string {
	if m != nil {
		return m.Placetype
	}
	return ""
}

func (m *StandardPlaceResponse) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *StandardPlaceResponse) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *StandardPlaceResponse) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *StandardPlaceResponse) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *StandardPlaceResponse) GetLatitude() float32 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *StandardPlaceResponse) GetLongitude() float32 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *StandardPlaceResponse) GetIsCurrent() ExistentialFlag {
	if m != nil {
		return m.IsCurrent
	}
	return ExistentialFlag_FALSE
}

func (m *StandardPlaceResponse) GetIsCeased() ExistentialFlag {
	if m != nil {
		return m.IsCeased
	}
	return ExistentialFlag_FALSE
}

func (m *StandardPlaceResponse) GetIsDeprecated() ExistentialFlag {
	if m != nil {
		return m.IsDeprecated
	}
	return ExistentialFlag_FALSE
}

func (m *StandardPlaceResponse) GetIsSuperseded() ExistentialFlag {
	if m != nil {
		return m.IsSuperseded
	}
	return ExistentialFlag_FALSE
}

func (m *StandardPlaceResponse) GetIsSuperseding() ExistentialFlag {
	if m != nil {
		return m.IsSuperseding
	}
	return ExistentialFlag_FALSE
}

func (m *StandardPlaceResponse) GetInceptionDate() string {
	if m != nil {
		return m.InceptionDate
	}
	return ""
}

func (m *StandardPlaceResponse) GetCessationDate() string {
	if m != nil {
		return m.CessationDate
	}
	return ""
}

func (m *StandardPlaceResponse) GetMinLatitude() float32 {
	if m != nil {
		return m.MinLatitude
	}
	return 0
}

func (m *StandardPlaceResponse) GetMinLongitude() float32 {
	if m != nil {
		return m.MinLongitude
	}
	return 0
}

func (m *StandardPlaceResponse) GetMaxLatitude() float32 {
	if m != nil {
		return m.MaxLatitude
	}
	return 0
}

func (m *StandardPlaceResponse) GetMaxLongitude() float32 {
	if m != nil {
		return m.MaxLongitude
	}
	return 0
}

func (m *StandardPlaceResponse) GetSupersededBy() []int64 {
	if m != nil {
		return m.SupersededBy
	}
	return nil
}

func (m *StandardPlaceResponse) GetSupersedes() []int64 {
	if m != nil {
		return m.Supersedes
	}
	return nil
}

func (m *StandardPlaceResponse) GetBelongsTo() []int64 {
	if m != nil {
		return m.BelongsTo
	}
	return nil
}

func (m *StandardPlaceResponse) GetLastModified() int64 {
	if m != nil {
		return m.LastModified
	}
	return 0
}

type StandardPlacesResults struct {
	Places               []*StandardPlaceResponse `protobuf:"bytes,1,rep,name=places,proto3" json:"places,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *StandardPlacesResults) Reset()         { *m = StandardPlacesResults{} }
func (m *StandardPlacesResults) String() string { return proto.CompactTextString(m) }
func (*StandardPlacesResults) ProtoMessage()    {}
func (*StandardPlacesResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_ab81574adde31065, []int{2}
}

func (m *StandardPlacesResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardPlacesResults.Unmarshal(m, b)
}
func (m *StandardPlacesResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardPlacesResults.Marshal(b, m, deterministic)
}
func (m *StandardPlacesResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardPlacesResults.Merge(m, src)
}
func (m *StandardPlacesResults) XXX_Size() int {
	return xxx_messageInfo_StandardPlacesResults.Size(m)
}
func (m *StandardPlacesResults) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardPlacesResults.DiscardUnknown(m)
}

var xxx_messageInfo_StandardPlacesResults proto.InternalMessageInfo

func (m *StandardPlacesResults) GetPlaces() []*StandardPlaceResponse {
	if m != nil {
		return m.Places
	}
	return nil
}

func init() {
	proto.RegisterEnum("ExistentialFlag", ExistentialFlag_name, ExistentialFlag_value)
	proto.RegisterType((*PointInPolygonRequest)(nil), "PointInPolygonRequest")
	proto.RegisterType((*StandardPlaceResponse)(nil), "StandardPlaceResponse")
	proto.RegisterType((*StandardPlacesResults)(nil), "StandardPlacesResults")
}

func init() {
	proto.RegisterFile("spatial.proto", fileDescriptor_ab81574adde31065)
}

var fileDescriptor_ab81574adde31065 = []byte{
	// 612 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0x6d, 0x6f, 0xd3, 0x30,
	0x10, 0x5e, 0xda, 0xad, 0x6d, 0x6e, 0x4d, 0x57, 0xcc, 0x36, 0xac, 0xf1, 0xa2, 0xd2, 0x09, 0xa9,
	0x42, 0xa2, 0xa0, 0x21, 0xc4, 0x17, 0xbe, 0xb0, 0x37, 0x34, 0x18, 0x63, 0xa4, 0x9b, 0xf8, 0x18,
	0x79, 0xf5, 0x51, 0x2c, 0xa5, 0x76, 0x88, 0x1d, 0xa9, 0xfd, 0x29, 0xfc, 0x39, 0xfe, 0x0a, 0xc8,
	0x6e, 0x9a, 0xac, 0xd5, 0x8a, 0xc8, 0xa7, 0xf8, 0xb9, 0xe7, 0x79, 0xce, 0x77, 0x27, 0x1f, 0x04,
	0x3a, 0x61, 0x46, 0xb0, 0xb8, 0x9f, 0xa4, 0xca, 0xa8, 0xee, 0x57, 0xd8, 0xb9, 0x54, 0x42, 0x9a,
	0x33, 0x79, 0xa9, 0xe2, 0xe9, 0x48, 0xc9, 0x10, 0x7f, 0x66, 0xa8, 0x0d, 0xd9, 0x83, 0x46, 0xcc,
	0x8c, 0x30, 0x19, 0x47, 0xea, 0x75, 0xbc, 0x5e, 0x25, 0x2c, 0xce, 0xe4, 0x11, 0xf8, 0xb1, 0x92,
	0xa3, 0x59, 0xb0, 0xe2, 0x82, 0x25, 0xd0, 0xfd, 0x5d, 0x83, 0x9d, 0x81, 0x61, 0x92, 0xb3, 0x94,
	0x5f, 0xc6, 0x6c, 0x88, 0x21, 0xea, 0x44, 0x49, 0x8d, 0xa4, 0x05, 0x15, 0xc1, 0x9d, 0x9b, 0x1f,
	0x56, 0x04, 0x27, 0x0f, 0xc1, 0x4f, 0x58, 0x8a, 0xd2, 0x44, 0x82, 0x3b, 0x1f, 0x3f, 0x6c, 0xcc,
	0x80, 0x33, 0x6e, 0x93, 0x24, 0x56, 0x6d, 0xa6, 0x09, 0xd2, 0xaa, 0x0b, 0x96, 0x00, 0xa1, 0x50,
	0x1f, 0xaa, 0x4c, 0x9a, 0x74, 0x4a, 0xd7, 0x5d, 0x6c, 0x7e, 0x24, 0x04, 0xd6, 0x53, 0x4c, 0x14,
	0xdd, 0x70, 0xb0, 0xfb, 0xb7, 0x58, 0xc2, 0xcc, 0x0f, 0x5a, 0x9b, 0x61, 0xf6, 0x9f, 0xb4, 0xa1,
	0x9a, 0xa5, 0x82, 0xd6, 0x1d, 0x64, 0x7f, 0x17, 0x4a, 0x6e, 0xfc, 0xab, 0x64, 0x7f, 0xa9, 0x64,
	0xf2, 0x12, 0x40, 0xe8, 0x68, 0x98, 0xa5, 0xf6, 0xee, 0x14, 0x3a, 0x5e, 0xaf, 0x75, 0xd0, 0xee,
	0x9f, 0x4c, 0x84, 0x36, 0x28, 0x6d, 0xb7, 0x4f, 0x63, 0x36, 0x0a, 0x7d, 0xa1, 0x8f, 0x66, 0x14,
	0xf2, 0x02, 0x7c, 0x2b, 0x40, 0xa6, 0x91, 0xd3, 0xcd, 0x15, 0xfc, 0x86, 0xd0, 0x47, 0x8e, 0x41,
	0xde, 0x40, 0x20, 0x74, 0xc4, 0x31, 0x49, 0x71, 0xc8, 0x0c, 0x72, 0xda, 0x5c, 0x21, 0x69, 0x0a,
	0x7d, 0x5c, 0xb0, 0x72, 0x99, 0xce, 0x12, 0x4c, 0x35, 0x72, 0xe4, 0x34, 0x58, 0x2d, 0x1b, 0x14,
	0x2c, 0xf2, 0x16, 0x5a, 0xb7, 0x64, 0x42, 0x8e, 0x68, 0x6b, 0x85, 0x2e, 0x28, 0x75, 0x42, 0x8e,
	0xc8, 0x33, 0x68, 0x09, 0x39, 0xc4, 0xc4, 0x08, 0x25, 0x23, 0xce, 0x0c, 0xd2, 0x2d, 0xd7, 0xdd,
	0xa0, 0x40, 0x8f, 0x99, 0x41, 0x4b, 0x1b, 0xa2, 0xd6, 0xac, 0xa4, 0xb5, 0x67, 0xb4, 0x02, 0x75,
	0xb4, 0xa7, 0xd0, 0x1c, 0x0b, 0x19, 0x15, 0x23, 0xb9, 0xe7, 0xba, 0xbe, 0x39, 0x16, 0xf2, 0x7c,
	0x3e, 0x95, 0x7d, 0x08, 0x1c, 0xa5, 0x98, 0x0c, 0x71, 0x1c, 0xab, 0x3b, 0x2f, 0x86, 0x63, 0x7d,
	0xd8, 0xa4, 0xf4, 0xb9, 0x9f, 0xfb, 0xb0, 0xc9, 0x82, 0x8f, 0xa5, 0x14, 0x3e, 0xdb, 0xb9, 0x0f,
	0x9b, 0x94, 0x3e, 0xfb, 0x10, 0x94, 0xad, 0x8c, 0x6e, 0xa6, 0x74, 0xa7, 0x53, 0xed, 0x55, 0xc3,
	0x66, 0x09, 0x1e, 0x4e, 0xc9, 0x13, 0x80, 0xe2, 0xac, 0xe9, 0xae, 0x63, 0xdc, 0x42, 0xc8, 0x63,
	0x80, 0x1b, 0xb4, 0x79, 0x74, 0x64, 0x14, 0x7d, 0xe0, 0xe2, 0x7e, 0x8e, 0x5c, 0x29, 0x9b, 0x23,
	0x66, 0xda, 0x44, 0x63, 0xc5, 0xc5, 0x77, 0x81, 0x9c, 0xd2, 0x8e, 0x67, 0x73, 0x58, 0xf0, 0x73,
	0x8e, 0x75, 0x3f, 0x2c, 0xbd, 0x2f, 0x1d, 0xa2, 0xce, 0x62, 0xa3, 0x49, 0x1f, 0x6a, 0xee, 0x85,
	0x68, 0xea, 0x75, 0xaa, 0xbd, 0xcd, 0x83, 0xdd, 0xfe, 0x9d, 0xef, 0x30, 0xcc, 0x59, 0xcf, 0xdf,
	0xc1, 0xd6, 0xd2, 0x44, 0x89, 0x0f, 0x1b, 0xa7, 0xef, 0xcf, 0x07, 0x27, 0xed, 0x35, 0xd2, 0x80,
	0xf5, 0xab, 0xf0, 0xfa, 0xa4, 0xed, 0x91, 0x6d, 0xa8, 0x5f, 0x5f, 0x7c, 0xba, 0xf8, 0xf2, 0xed,
	0xa2, 0xfd, 0x67, 0xfe, 0x79, 0x07, 0xbf, 0x3c, 0xa8, 0x0f, 0x66, 0xcb, 0x84, 0x1c, 0x42, 0x6b,
	0x71, 0x8d, 0x90, 0xdd, 0xfe, 0x9d, 0x7b, 0x65, 0x6f, 0xe9, 0x4e, 0xf3, 0xbb, 0x77, 0xd7, 0xc8,
	0x47, 0xd8, 0x5e, 0x94, 0x0c, 0x4c, 0x8a, 0x6c, 0xfc, 0xbf, 0x4e, 0xf3, 0xea, 0xba, 0x6b, 0xaf,
	0xbc, 0x9b, 0x9a, 0xdb, 0x6e, 0xaf, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xff, 0xdc, 0x18, 0x74,
	0xee, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SpatialClient is the client API for Spatial service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SpatialClient interface {
	PointInPolygon(ctx context.Context, in *PointInPolygonRequest, opts ...grpc.CallOption) (*StandardPlacesResults, error)
	PointInPolygonStream(ctx context.Context, in *PointInPolygonRequest, opts ...grpc.CallOption) (Spatial_PointInPolygonStreamClient, error)
}

type spatialClient struct {
	cc grpc.ClientConnInterface
}

func NewSpatialClient(cc grpc.ClientConnInterface) SpatialClient {
	return &spatialClient{cc}
}

func (c *spatialClient) PointInPolygon(ctx context.Context, in *PointInPolygonRequest, opts ...grpc.CallOption) (*StandardPlacesResults, error) {
	out := new(StandardPlacesResults)
	err := c.cc.Invoke(ctx, "/Spatial/PointInPolygon", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spatialClient) PointInPolygonStream(ctx context.Context, in *PointInPolygonRequest, opts ...grpc.CallOption) (Spatial_PointInPolygonStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Spatial_serviceDesc.Streams[0], "/Spatial/PointInPolygonStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &spatialPointInPolygonStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Spatial_PointInPolygonStreamClient interface {
	Recv() (*StandardPlaceResponse, error)
	grpc.ClientStream
}

type spatialPointInPolygonStreamClient struct {
	grpc.ClientStream
}

func (x *spatialPointInPolygonStreamClient) Recv() (*StandardPlaceResponse, error) {
	m := new(StandardPlaceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SpatialServer is the server API for Spatial service.
type SpatialServer interface {
	PointInPolygon(context.Context, *PointInPolygonRequest) (*StandardPlacesResults, error)
	PointInPolygonStream(*PointInPolygonRequest, Spatial_PointInPolygonStreamServer) error
}

// UnimplementedSpatialServer can be embedded to have forward compatible implementations.
type UnimplementedSpatialServer struct {
}

func (*UnimplementedSpatialServer) PointInPolygon(ctx context.Context, req *PointInPolygonRequest) (*StandardPlacesResults, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PointInPolygon not implemented")
}
func (*UnimplementedSpatialServer) PointInPolygonStream(req *PointInPolygonRequest, srv Spatial_PointInPolygonStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method PointInPolygonStream not implemented")
}

func RegisterSpatialServer(s *grpc.Server, srv SpatialServer) {
	s.RegisterService(&_Spatial_serviceDesc, srv)
}

func _Spatial_PointInPolygon_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PointInPolygonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SpatialServer).PointInPolygon(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Spatial/PointInPolygon",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SpatialServer).PointInPolygon(ctx, req.(*PointInPolygonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Spatial_PointInPolygonStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PointInPolygonRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(SpatialServer).PointInPolygonStream(m, &spatialPointInPolygonStreamServer{stream})
}

type Spatial_PointInPolygonStreamServer interface {
	Send(*StandardPlaceResponse) error
	grpc.ServerStream
}

type spatialPointInPolygonStreamServer struct {
	grpc.ServerStream
}

func (x *spatialPointInPolygonStreamServer) Send(m *StandardPlaceResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _Spatial_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Spatial",
	HandlerType: (*SpatialServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PointInPolygon",
			Handler:    _Spatial_PointInPolygon_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PointInPolygonStream",
			Handler:       _Spatial_PointInPolygonStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "spatial.proto",
}
